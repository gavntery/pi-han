===============================================================================
3DPlot Script Changelog
===============================================================================

1.31: * 2011-05-26 - #feature-id changed to 'Render > 3DPlot'

1.3:  * The interface has been updated to use the new ColorComboBox controls
         available in PI version 1.5.3.
      * Added a "soft" gc() call (new in PI 1.5.3) in the Render function
         to fix memory consumption problems without degrading performance.
      * The histogram stretch is only applied when necessary (when the STF
         isn't an identity transformation).
      * Fixed some problems with alpha channels generated unnecessarily.
      * Removed the unused polygon fill color parameter and related dialog
         controls.

1.2:  * Uses the STF active in the view instead asking the user for a MTF
         value.

1.1:  * Added SVG output. This is mainly intended to test the new SVG
         generation capabilities available in PI 1.5.
      * Fixed generation of image renditions with transparency. When
         necessary, an alpha chanel is now generated automatically.

1.0:  * Several improvements to the user interface and a few optimizations.
      * Replaced CreatePerspective() by a _3dplot_xform object.
      * Some identifiers changed for coherency.

0.9:  * License, changelog, bare-bones user interface.

0.8:  * Smooth color transitions.

0.7:  * Reimplemented the possibility of rotating the 3D view.

0.6:  * Visualization now maps the height to a color palette.

0.5:  * The script can now be aborted by the user.
      * The script shows progress information on the console.
      * The perspective transformation points are now calculated faster.
      * The MTF transformation is now carried out using a HT.

0.4:  * Optional shading effect added.

0.3:  * The resulting image shows the full extent of the 3D view.
      * The code has been reorganized and structured.
      * A MTF is applied to the image to improve the visualization.
      * The perspective transformation has been simplified again.
      * There are a couple of checks before starting the algorithm.

0.2:  * It now works on grayscale images.
      * The 3D image is centered in the output image.
      * The code is a bit simpler.
      * It is now 7 times faster.

0.1:  * Initial test version.
